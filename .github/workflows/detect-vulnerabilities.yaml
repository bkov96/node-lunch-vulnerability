name: Detect and Report Vulnerabilities
on:
  registry_package:
    types:
      - published

env:
  GITHUB_REGISTRY: ghcr.io/bkov96

jobs:
  npm-audit:
    if: github.event.registry_package.name == 'node-lunch-vulnerability'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Execute NPM Audit
        run: |
          npm audit --json > npm-audit.json
          cat npm-audit.json

      - name: Upload NPM Audit JSON Artifact
        uses: actions/upload-artifact@v2
        with:
          name: npm-audit.json
          path: npm-audit.json

  anchore-grype:
    if: github.event.registry_package.name == 'node-lunch-vulnerability'
    runs-on: ubuntu-latest
    steps:

      - name: Print Docker Image Tag
        run: echo ${{ github.event.registry_package.package_version.package_url }}

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Anchore Grype Scan
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ github.event.registry_package.package_version.package_url }}
          output-format: 'sarif'
          fail-build: false

      - name: Upload Anchore Grype Results to Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
          category: anchore-grype

      - name: Upload Anchore Grype SARIF Artifact
        uses: actions/upload-artifact@v2
        with:
          name: anchore-grype.sarif
          path: ${{ steps.scan.outputs.sarif }}

  trivy:
    if: github.event.registry_package.name == 'node-lunch-vulnerability'
    runs-on: ubuntu-latest
    steps:

      - name: Print Docker Image Tag
        run: echo ${{ github.event.registry_package.package_version.package_url }}
      
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
        with:
          scan-type: image
          image-ref: ${{ github.event.registry_package.package_version.package_url }}
          format: sarif
          output: trivy.sarif

      - name: Upload Trivy Results to Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif
          category: trivy

      - name: Upload Trivy SARIF Artifact
        uses: actions/upload-artifact@v2
        with:
          name: trivy.sarif
          path: trivy.sarif